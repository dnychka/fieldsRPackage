atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,add=TRUE)
x<- 1:20
y<-  1:24
colGrid<- "magenta"
colBg<- "grey85"
z<- outer( x, y, "+")
z[1:5, 2:6]<-NA
m<- dim(z)[1]
n<- dim(z)[2]
if( m==length(x)){
dx<- diff(x)/2
atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,add=TRUE)
x<- 1:20
y<-  1:24
colGrid<- "magenta"
colBg<- "grey85"
z<- outer( x, y, "+")
z[1:5, 2:6]<-NA
z[15:16, 17:19]<-NA
m<- dim(z)[1]
n<- dim(z)[2]
if( m==length(x)){
dx<- diff(x)/2
atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,add=TRUE)
x<- 1:20
y<-  1:24
colGrid<- "magenta"
colBg<- "grey85"
z<- outer( x, y, "+")
z[1:5, 2:6]<-NA
z[15:16, 17:19]<-NA
m<- dim(z)[1]
n<- dim(z)[2]
if( m==length(x)){
dx<- diff(x)/2
atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
grid(col="white")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,add=TRUE)
x<- 1:20
y<-  1:24
colGrid<- "magenta"
colBg<- "grey85"
z<- outer( x, y, "+")
z[1:5, 2:6]<-NA
z[15:16, 17:19]<-NA
m<- dim(z)[1]
n<- dim(z)[2]
if( m==length(x)){
dx<- diff(x)/2
atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
grid(col="white")
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,add=TRUE)
x<- 1:20
y<-  1:24
colGrid<- "grey85"
colBg<- "grey85"
z<- outer( x, y, "+")
z[1:5, 2:6]<-NA
z[15:16, 17:19]<-NA
m<- dim(z)[1]
n<- dim(z)[2]
if( m==length(x)){
dx<- diff(x)/2
atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
grid(col="white")
imagePlot(x,y,z,add=TRUE)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
x<- 1:20
y<-  1:24
z<- outer( x, y, "+")
# ggplot version
mesh<- expand.grid( x= x, y=y)
mesh$z <- c(z)
ggplot( data=mesh, aes( x=x, y=y, fill=z)) +
geom_raster(interpolate= FALSE)  +
scale_fill_continuous(type = "viridis")  +
theme_bw()
z<- outer( x, y, "+")
imagePlot
imagePlot(x,y,z)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,xlim=xr, ylim=yr)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
x<- (1:20)^(.75)
y<-  1:24
colGrid<- "grey85"
colBg<- "grey85"
z<- outer( x, y, "+")
z[1:5, 2:6]<-NA
z[15:16, 17:19]<-NA
m<- dim(z)[1]
n<- dim(z)[2]
if( m==length(x)){
dx<- diff(x)/2
atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
grid(col="white")
imagePlot(x,y,z,add=TRUE)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,xlim=xr, ylim=yr)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
x<- (1:20)^(1.5)
y<-  1:24
colGrid<- "grey85"
colBg<- "grey85"
z<- outer( x, y, "+")
z[1:5, 2:6]<-NA
z[15:16, 17:19]<-NA
m<- dim(z)[1]
n<- dim(z)[2]
if( m==length(x)){
dx<- diff(x)/2
atx<- c( x[1]-dx[1], x[1:(m-1)] + dx,  x[m]+dx[m-1])
}
if( n==length(y) ){
dy<- diff(y)/2
aty<- c( y[1]-dy[1], y[1:(n-1)] + dy,  y[n]+dy[n-1])
}
# inflate range to give a margin around image
xr<- range(x) +  c(-.08, .08)* diff( range(x))
yr<- range(y) +  c(-.08, .08)* diff( range(y))
plot(xr,yr,type="n")
xy<- par()$usr
rect(xy[1],xy[3],xy[2],xy[4],col=colBg)
grid(col="white")
imagePlot(x,y,z,add=TRUE)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
imagePlot(x,y,z,xlim=xr, ylim=yr)
segments(atx,rep(aty[1],m+1), atx, rep(aty[n+1],m+1),col=colGrid)
segments(rep(atx[1],n+1),aty, rep(atx[m+1],n+1), aty,col=colGrid)
par()$log
names(par())
par()$xlog
par()$ylog
ifelse
N<- 25*12
P<- 4.2*1e3
P
N<- 25*12
P<- 4.2*1e6
p
P
N<- 25*12
P<- 4.2*1e6
W<- 120000
I<- .04/12
for( k in 1:N){
P<- (P- W)*I
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 120000
I<- .04/12
for( k in 1:N){
P<- (P- W)*I
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 120000
I<- .04/12
for( k in 1:N){
P<- (P- W)*(1+I)
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 100000
I<- .04/12
for( k in 1:N){
P<- (P- W)*(1+I)
cat(k,P, fill=TRUE)
}
4.2*1e6/1e5
42/12
N<- 25*12
P<- 4.2*1e6
W<-  50000
I<- .04/12
for( k in 1:N){
P<- (P- W)*(1+I)
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<-  50000
I<- .05/12
for( k in 1:N){
P<- (P- W)*(1+I)
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<-  50000
I<- .05/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 120000/12
I<- .05/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 120000/12
I<- .04/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 120000/12
I<- .03/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 150000/12
I<- .03/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
N<- 25*12
P<- 4.2*1e6
W<- 150000/12
I<- .02/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
N<- 30*12
P<- 4.2*1e6
W<- 150000/12
I<- .02/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
N<- 30*12
P<- 4.2*1e6
W<- 1st 30000/12
N<- 30*12
P<- 4.2*1e6
W<- 130000/12
I<- .02/12
for( k in 1:N){
P<- (P*(1+I))
P<- P - W
cat(k,P, fill=TRUE)
}
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/cubicSmoothingSplineBand.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/cubicSmoothingSplineBand.R", echo=TRUE)
+                   symmetric = FALSE)
n<- 8E3
x<- sort(runif( n))
y<- x*2 + .01*rnorm( n)
weights<- seq( 1, 1.5 , length.out= n)
lambda<- .1
tic()
library( tictoc)
n<- 8E3
x<- sort(runif( n))
y<- x*2 + .01*rnorm( n)
weights<- seq( 1, 1.5 , length.out= n)
lambda<- .1
tic()
look<- cubicSmoothingSplineBand(x,y, weights=weights, lambda=.1)
library( Matrix)
n<- 8E3
x<- sort(runif( n))
y<- x*2 + .01*rnorm( n)
weights<- seq( 1, 1.5 , length.out= n)
lambda<- .1
tic()
look<- cubicSmoothingSplineBand(x,y, weights=weights, lambda=.1)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/cubicSmoothingSplineBand.R", echo=TRUE)
library( Matrix)
n<- 8E3
x<- sort(runif( n))
y<- x*2 + .01*rnorm( n)
weights<- seq( 1, 1.5 , length.out= n)
lambda<- .1
tic()
look<- cubicSmoothingSplineBand(x,y, weights=weights, lambda=.1)
library( Matrix)
n<- 8E3
x<- seq( 0,1, length.out=n)
y<- x*2 + .01*rnorm( n)
weights<- seq( 1, 1.5 , length.out= n)
lambda<- .1
tic()
look<- cubicSmoothingSplineBand(x,y, weights=weights, lambda=.1)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/cubicSmoothingSplineBand.R", echo=TRUE)
library( Matrix)
n<- 8E3
x<- seq( 0,1, length.out=n)
y<- x*2 + .01*rnorm( n)
weights<- seq( 1, 1.5 , length.out= n)
lambda<- .1
tic()
look<- cubicSmoothingSplineBand(x,y, weights=weights, lambda=.1)
toc()
tic()
look0<- splint( x,y, x, wt=weights, lambda=.1)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/testSparseBand.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/cubicSmoothingSplineBand.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/testSparseBand.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/cubicSmoothingSplineBand.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/testSparseBand.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/cubicSmoothingSplineBand.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/newSreg/testSparseBand.R", echo=TRUE)
qr
methods(qr)
qr.default
.Fortran(.F_dqrdc2)
.Fortran(.F_DPBTRS)
.Fortran(.F_dpbtrs)
n<- 8
x<- seq( 0,1, length.out=n)
y<- x*2 + .01*rnorm( n)
weights<- seq( 1, 1.5 , length.out= n)
lambda<- .1
.Fortran(x,weights,y, n, V=as.double( 0,n*7),
QTY=as.double( rep(0,n), as.integer(0), as.integer
)
)
.Fortran(x,weights,y, n, V=as.double( 0,n*7),
QTY=as.double( rep(0,n), as.integer(0), as.integer(0)
)
.Fortran(x,weights,y, n, V=as.double( rep(0,n*7)),
QTY=as.double( rep(0,n)), as.integer(0), as.integer(0)
)
sreg
library( fields)
splint
.Fortran("dSETUP", x,weights,y, n, V=as.double( rep(0,n*7)),
QTY=as.double( rep(0,n)), as.integer(0), as.integer(0))
library(fields)
n<-8
x<- 1:8
weights<- rep(1,8)
set.seed(123)
y<- rnorm(8)
splint( x,y,x,wt=weights, lambda=.1)
.Fortran("dsetup", x,
weights, y, n, V=as.double( rep(0,n*7)),
QTY=as.double( rep(0,n)),NMAX=80000, as.integer(0), as.integer(0),
PACKAGE="fields"
)
testSetup( x,y,weights)
chol.default
library( fields)
fields.color.picker()
fields.color.picker(3)
library( fields)
setwd("~/Dropbox/Home/Repositories/fieldsRPackage/fields/R")
look<- colors()
look
ls()
remove(list=ls())
ls()
paleBlue = "#CFDCE9"
lightBlue = "#879EC3"
blasterBlue = "#09396C"
darkBlue = "#21314d"
coloradoRed = "#CC4628"
# Neutrals
lightGray = "#AEB3B8"
silver = "#81848A"
darkGray = "#75757D"
# Accents
goldenTech = "#F1B91A"
earthBlue = "#0272DE"
mutedBlue = "#57A2BD"
energyYellow = "#F0F600"
envrGreen = "#80C342"
redFlannel = "#B42024"
ls()
source("~/Dropbox/Home/Repositories/fieldsRPackage/fields/R/Mines.colors.R", echo=TRUE)
source("~/Dropbox/Home/Repositories/fieldsRPackage/fields/R/Mines.colors.R", echo=TRUE)
remove(list=ls())
dir( ../data)
dir( "../data")
load( "../data/Mines.colors.rda")
ls()
plot( 1:10, col="goldenTech")
plot( 1:10, col="goldenTech")
devoff()
dev.off()
devoff()
dir( "../data")
dev.off()
plot( 1:10, col="goldenTech")
ls()
plot( 1:10, col=goldenTech)
help( colors)
demo("colors")
50000/ 19
2631.579^{.3333}
2631.579^{.3333}/ 2.54
